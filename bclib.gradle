java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.dblsaiko.net/" }
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.blamejared.com' }
	maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/releases' }
}

loom {
	//accessWidenerPath = file("src/main/resources/bclib.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	modImplementation ("com.github.Reforged-Mods:FabricBiomeApiReforged:2.0.0")
	//useApi "vazkii.patchouli:Patchouli:1.16.4-${project.patchouli_version}"
}

processResources {
	println "Version: ${project.mod_version}"
	inputs.property "version", project.mod_version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.mod_version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

javadoc {
	options.tags = [ "reason" ]
	options.stylesheetFile = new File(projectDir, "javadoc.css");
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

def env = System.getenv()


// configure the maven publication
publishing {
	publications {
		gpr(MavenPublication) {
			artifactId archivesBaseName
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/paulevsgitch/bclib")
			credentials {
				username = env.GITHUB_USER
				password = env.GITHUB_TOKEN
			}
		}
	}
}

configurations {
	dev {
		canBeResolved = false
		canBeConsumed = true
	}
}

artifacts {
	dev jar
}
